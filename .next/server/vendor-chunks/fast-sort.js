"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/fast-sort";
exports.ids = ["vendor-chunks/fast-sort"];
exports.modules = {

/***/ "(rsc)/./node_modules/fast-sort/dist/sort.mjs":
/*!**********************************************!*\
  !*** ./node_modules/fast-sort/dist/sort.mjs ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNewSortInstance: () => (/* binding */ createNewSortInstance),\n/* harmony export */   defaultComparer: () => (/* binding */ defaultComparer),\n/* harmony export */   inPlaceSort: () => (/* binding */ inPlaceSort),\n/* harmony export */   sort: () => (/* binding */ sort)\n/* harmony export */ });\n// >>> INTERFACES <<<\n// >>> HELPERS <<<\nvar castComparer = function(comparer) {\n    return function(a, b, order) {\n        return comparer(a, b, order) * order;\n    };\n};\nvar throwInvalidConfigErrorIfTrue = function(condition, context) {\n    if (condition) throw Error(\"Invalid sort config: \" + context);\n};\nvar unpackObjectSorter = function(sortByObj) {\n    var _a = sortByObj || {}, asc = _a.asc, desc = _a.desc;\n    var order = asc ? 1 : -1;\n    var sortBy = asc || desc;\n    // Validate object config\n    throwInvalidConfigErrorIfTrue(!sortBy, \"Expected `asc` or `desc` property\");\n    throwInvalidConfigErrorIfTrue(asc && desc, \"Ambiguous object with `asc` and `desc` config properties\");\n    var comparer = sortByObj.comparer && castComparer(sortByObj.comparer);\n    return {\n        order: order,\n        sortBy: sortBy,\n        comparer: comparer\n    };\n};\n// >>> SORTERS <<<\nvar multiPropertySorterProvider = function(defaultComparer) {\n    return function multiPropertySorter(sortBy, sortByArr, depth, order, comparer, a, b) {\n        var valA;\n        var valB;\n        if (typeof sortBy === \"string\") {\n            valA = a[sortBy];\n            valB = b[sortBy];\n        } else if (typeof sortBy === \"function\") {\n            valA = sortBy(a);\n            valB = sortBy(b);\n        } else {\n            var objectSorterConfig = unpackObjectSorter(sortBy);\n            return multiPropertySorter(objectSorterConfig.sortBy, sortByArr, depth, objectSorterConfig.order, objectSorterConfig.comparer || defaultComparer, a, b);\n        }\n        var equality = comparer(valA, valB, order);\n        if ((equality === 0 || valA == null && valB == null) && sortByArr.length > depth) {\n            return multiPropertySorter(sortByArr[depth], sortByArr, depth + 1, order, comparer, a, b);\n        }\n        return equality;\n    };\n};\nfunction getSortStrategy(sortBy, comparer, order) {\n    // Flat array sorter\n    if (sortBy === undefined || sortBy === true) {\n        return function(a, b) {\n            return comparer(a, b, order);\n        };\n    }\n    // Sort list of objects by single object key\n    if (typeof sortBy === \"string\") {\n        throwInvalidConfigErrorIfTrue(sortBy.includes(\".\"), \"String syntax not allowed for nested properties.\");\n        return function(a, b) {\n            return comparer(a[sortBy], b[sortBy], order);\n        };\n    }\n    // Sort list of objects by single function sorter\n    if (typeof sortBy === \"function\") {\n        return function(a, b) {\n            return comparer(sortBy(a), sortBy(b), order);\n        };\n    }\n    // Sort by multiple properties\n    if (Array.isArray(sortBy)) {\n        var multiPropSorter_1 = multiPropertySorterProvider(comparer);\n        return function(a, b) {\n            return multiPropSorter_1(sortBy[0], sortBy, 1, order, comparer, a, b);\n        };\n    }\n    // Unpack object config to get actual sorter strategy\n    var objectSorterConfig = unpackObjectSorter(sortBy);\n    return getSortStrategy(objectSorterConfig.sortBy, objectSorterConfig.comparer || comparer, objectSorterConfig.order);\n}\nvar sortArray = function(order, ctx, sortBy, comparer) {\n    var _a;\n    if (!Array.isArray(ctx)) {\n        return ctx;\n    }\n    // Unwrap sortBy if array with only 1 value to get faster sort strategy\n    if (Array.isArray(sortBy) && sortBy.length < 2) {\n        _a = sortBy, sortBy = _a[0];\n    }\n    return ctx.sort(getSortStrategy(sortBy, comparer, order));\n};\nfunction createNewSortInstance(opts) {\n    var comparer = castComparer(opts.comparer);\n    return function(arrayToSort) {\n        var ctx = Array.isArray(arrayToSort) && !opts.inPlaceSorting ? arrayToSort.slice() : arrayToSort;\n        return {\n            asc: function(sortBy) {\n                return sortArray(1, ctx, sortBy, comparer);\n            },\n            desc: function(sortBy) {\n                return sortArray(-1, ctx, sortBy, comparer);\n            },\n            by: function(sortBy) {\n                return sortArray(1, ctx, sortBy, comparer);\n            }\n        };\n    };\n}\nvar defaultComparer = function(a, b, order) {\n    if (a == null) return order;\n    if (b == null) return -order;\n    if (typeof a !== typeof b) {\n        return typeof a < typeof b ? -1 : 1;\n    }\n    if (a < b) return -1;\n    if (a > b) return 1;\n    return 0;\n};\nvar sort = createNewSortInstance({\n    comparer: defaultComparer\n});\nvar inPlaceSort = createNewSortInstance({\n    comparer: defaultComparer,\n    inPlaceSorting: true\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/fast-sort/dist/sort.mjs\n");

/***/ })

};
;